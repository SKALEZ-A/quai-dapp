version: '3.8'

services:
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: quai-social-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=4000
    env_file:
      - .env
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - quai-network

  postgres:
    image: postgres:15-alpine
    container_name: quai-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=quai_social
      - POSTGRES_USER=quai_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quai_user -d quai_social"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - quai-network

  redis:
    image: redis:7-alpine
    container_name: quai-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - quai-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: quai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - api
    networks:
      - quai-network

volumes:
  postgres_data:
  redis_data:

networks:
  quai-network:
    driver: bridge
