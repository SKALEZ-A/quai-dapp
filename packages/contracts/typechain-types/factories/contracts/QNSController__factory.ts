/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  QNSController,
  QNSControllerInterface,
} from "../../contracts/QNSController";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "expiresAt",
        type: "uint64",
      },
    ],
    name: "Commit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "Reveal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "expiresAt",
        type: "uint64",
      },
    ],
    name: "commit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "expiresAt",
        type: "uint64",
      },
    ],
    name: "computeCommitHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitHash",
        type: "bytes32",
      },
    ],
    name: "getPending",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "secret",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "expiresAt",
            type: "uint64",
          },
        ],
        internalType: "struct QNSController.Pending",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "expiresAt",
        type: "uint64",
      },
    ],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610559806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806378de7d19146100515780638742a257146100f65780638a39c95214610117578063b72372951461012c575b600080fd5b6100bc61005f3660046104a7565b604080516060808201835260008083526020808401829052928401819052938452838252928290208251938401835280546001600160a01b031684526001810154918401919091526002015467ffffffffffffffff169082015290565b6040805182516001600160a01b03168152602080840151908201529181015167ffffffffffffffff16908201526060015b60405180910390f35b6101096101043660046104c0565b61013f565b6040519081526020016100ed565b61012a6101253660046104c0565b610190565b005b61012a61013a3660046104c0565b61034f565b604080516020808201969096526001600160a01b039490941684820152606084019290925267ffffffffffffffff166080808401919091528151808403909101815260a09092019052805191012090565b6001600160a01b0383166101db5760405162461bcd60e51b815260206004820152600d60248201526c6f776e6572206973207a65726f60981b60448201526064015b60405180910390fd5b428167ffffffffffffffff16116102285760405162461bcd60e51b81526020600482015260116024820152706d75737420626520696e2066757475726560781b60448201526064016101d2565b60006102368585858561013f565b6000818152602081905260409020549091506001600160a01b0316156102925760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e4818dbdb5b5a5d1d1959607a1b60448201526064016101d2565b604080516060810182526001600160a01b03868116808352602080840188815267ffffffffffffffff88811686880181815260008a8152808652899020975188546001600160a01b03191697169690961787559151600187015593516002909501805467ffffffffffffffff191695909416949094179092558351878152918201929092529091879184917ffa963ce02a33be065727905a8200d7cf9f155d99014113d8afbfc479bef9f6be910160405180910390a45050505050565b600061035d8585858561013f565b60008181526020818152604091829020825160608101845281546001600160a01b031680825260018301549382019390935260029091015467ffffffffffffffff1692810192909252919250906103e75760405162461bcd60e51b815260206004820152600e60248201526d1b9bc81cdd58da0818dbdb5b5a5d60921b60448201526064016101d2565b42816040015167ffffffffffffffff1610156104365760405162461bcd60e51b815260206004820152600e60248201526d18dbdb5b5a5d08195e1c1a5c995960921b60448201526064016101d2565b60008281526020819052604080822080546001600160a01b031916815560018101839055600201805467ffffffffffffffff19169055516001600160a01b03871691889185917fcbf69115d2578c39a61e3fbae091c1bef2ac3a3e0f200984f969371299e337e591a4505050505050565b6000602082840312156104b957600080fd5b5035919050565b600080600080608085870312156104d657600080fd5b8435935060208501356001600160a01b03811681146104f457600080fd5b925060408501359150606085013567ffffffffffffffff8116811461051857600080fd5b93969295509093505056fea264697066735822122075f000a1902cdc67f4cb5ad56b65198aa75808a7fbd3de77ca4eccc95e1abdca64736f6c63430008170033";

type QNSControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QNSControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QNSController__factory extends ContractFactory {
  constructor(...args: QNSControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      QNSController & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): QNSController__factory {
    return super.connect(runner) as QNSController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QNSControllerInterface {
    return new Interface(_abi) as QNSControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): QNSController {
    return new Contract(address, _abi, runner) as unknown as QNSController;
  }
}
