/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SocialPosts,
  SocialPostsInterface,
} from "../../contracts/SocialPosts";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "zone",
        type: "string",
      },
    ],
    name: "PostCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "string",
        name: "zone",
        type: "string",
      },
    ],
    name: "anchorPost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101d8806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806382174f8414610030575b600080fd5b61004361003e3660046100db565b610045565b005b336001600160a01b03167fa1bdfd2a20015444206fea4ec9356a9be21a503d15b9aefa345d6554e2ba678b858585856040516100849493929190610170565b60405180910390a250505050565b60008083601f8401126100a457600080fd5b50813567ffffffffffffffff8111156100bc57600080fd5b6020830191508360208285010111156100d457600080fd5b9250929050565b600080600080604085870312156100f157600080fd5b843567ffffffffffffffff8082111561010957600080fd5b61011588838901610092565b9096509450602087013591508082111561012e57600080fd5b5061013b87828801610092565b95989497509550505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b604081526000610184604083018688610147565b8281036020840152610197818587610147565b97965050505050505056fea2646970667358221220d9582483c21213fec0981e064d15bc66c19f1e0fa9772548513408788038bbae64736f6c63430008170033";

type SocialPostsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SocialPostsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SocialPosts__factory extends ContractFactory {
  constructor(...args: SocialPostsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SocialPosts & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SocialPosts__factory {
    return super.connect(runner) as SocialPosts__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SocialPostsInterface {
    return new Interface(_abi) as SocialPostsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SocialPosts {
    return new Contract(address, _abi, runner) as unknown as SocialPosts;
  }
}
